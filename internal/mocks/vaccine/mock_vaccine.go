// Code generated by MockGen. DO NOT EDIT.
// Source: internal/vaccine/vaccine.go

// Package Mocks is a generated GoMock package.
package Mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	data "github.com/junkd0g/covid-vaccine/internal/data"
)

// MockRD is a mock of RD interface.
type MockRD struct {
	ctrl     *gomock.Controller
	recorder *MockRDMockRecorder
}

// MockRDMockRecorder is the mock recorder for MockRD.
type MockRDMockRecorder struct {
	mock *MockRD
}

// NewMockRD creates a new mock instance.
func NewMockRD(ctrl *gomock.Controller) *MockRD {
	mock := &MockRD{ctrl: ctrl}
	mock.recorder = &MockRDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRD) EXPECT() *MockRDMockRecorder {
	return m.recorder
}

// ReadData mocks base method.
func (m *MockRD) ReadData() (data.Countries, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadData")
	ret0, _ := ret[0].(data.Countries)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadData indicates an expected call of ReadData.
func (mr *MockRDMockRecorder) ReadData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadData", reflect.TypeOf((*MockRD)(nil).ReadData))
}
